{
	"info": {
		"_postman_id": "5350f1ea-a5ae-432e-86e5-3dea0eb278d0",
		"name": "Project 2110503",
		"description": "Project#1: Hotel Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41335293"
	},
	"item": [
		{
			"name": "User Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.execution.setNextRequest(\"User Login\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"telephone\":\"{{$randomPhoneNumber}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"12345678\",\r\n    \"role\":\"user\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/auth/register",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.globals.set(\"global_UserID\", jsonData._id);\r",
							"\r",
							"pm.execution.setNextRequest(\"Get All Hotels\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"Eloy.Gerlach94@hotmail.com\",\r\n    \"password\":\"12345678\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/auth/login",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Hotels",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"console.log(response);\r",
							"\r",
							"pm.test(\"There are some hotels!!\", ()=>{\r",
							"    pm.expect(response.count).to.be.above(0);\r",
							"});\r",
							"\r",
							"const hotel_ID = response.data[0]._id;\r",
							"pm.globals.set(\"Global_hotel_ID\", hotel_ID);\r",
							"\r",
							"pm.execution.setNextRequest(\"Create Booking\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/hotels",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"hotels"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"let jsonData;\r",
							"try {\r",
							"    jsonData = pm.response.json();\r",
							"} catch (e) {\r",
							"    console.error(\"❌ Failed to parse JSON:\", e);\r",
							"    pm.test(\"Invalid JSON\", function () {\r",
							"        throw new Error(\"Response is not valid JSON\");\r",
							"    });\r",
							"}\r",
							"\r",
							"if (jsonData && jsonData.success && jsonData.data && jsonData.data._id) {\r",
							"    pm.test(\"Booking created successfully\", function () {\r",
							"        pm.expect(jsonData.success).to.eql(true);\r",
							"        pm.expect(jsonData.data).to.have.property(\"_id\");\r",
							"    });\r",
							"\r",
							"    // ✅ Save booking ID for reuse in delete/update\r",
							"    pm.globals.set(\"booking_id\", jsonData.data._id);\r",
							"    console.log(\"✅ Booking ID saved as global:\", jsonData.data._id);\r",
							"\r",
							"} else {\r",
							"    // ❌ Booking failed — show error if present\r",
							"    pm.test(\"Booking failed\", function () {\r",
							"        pm.expect(jsonData.success).to.eql(true);  // This will fail\r",
							"    });\r",
							"\r",
							"    if (jsonData && jsonData.message) {\r",
							"        console.warn(\"❗ Booking failed reason:\", jsonData.message);\r",
							"    } else {\r",
							"        console.error(\"❌ Booking failed but no message in response.\");\r",
							"    }\r",
							"}\r",
							"pm.execution.setNextRequest(\"Get User Bookings\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "JSON Type",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"checkInDate\": \"2025-05-01\",\r\n  \"checkOutDate\": \"2025-05-04\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/hotels/:hotel_id/bookings",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"hotels",
						":hotel_id",
						"bookings"
					],
					"variable": [
						{
							"key": "hotel_id",
							"value": "{{Global_hotel_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Bookings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.execution.setNextRequest(\"Update User Booking\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "JSON Type",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/api/v1/bookings",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"bookings"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.execution.setNextRequest(\"Delete User Booking\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "JSON Type",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"checkInDate\": \"2025-05-10\",\r\n  \"checkOutDate\": \"2025-05-12\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/bookings/:id",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"bookings",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{booking_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.execution.setNextRequest(\"Logout User\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "JSON Type",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/bookings/:id",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"bookings",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{booking_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"TOKEN\", null)\r",
							"\r",
							"pm.execution.setNextRequest(\"Admin Login\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/auth/logout",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"TOKEN\", pm. response.json().token)\r",
							"\r",
							"pm.execution.setNextRequest(\"Get all bookings\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"Ashley.King@gmail.com\",\r\n    \"password\":\"87654321\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/auth/login",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all bookings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check for HTTP 200 OK\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData;\r",
							"try {\r",
							"    jsonData = pm.response.json();\r",
							"} catch (e) {\r",
							"    console.error(\"❌ Failed to parse JSON:\", e);\r",
							"    pm.test(\"Invalid JSON format\", function () {\r",
							"        pm.expect.fail(\"Response is not valid JSON\");\r",
							"    });\r",
							"    return; // Stop if response is not valid JSON\r",
							"}\r",
							"\r",
							"// Validate booking list\r",
							"if (jsonData.success && Array.isArray(jsonData.data) && jsonData.data.length > 0) {\r",
							"    pm.test(\"✅ Booking list is not empty\", function () {\r",
							"        pm.expect(jsonData.data.length).to.be.greaterThan(0);\r",
							"    });\r",
							"\r",
							"    // Extract all booking IDs\r",
							"    const bookingIds = jsonData.data.map(booking => booking._id);\r",
							"    console.log(\"📋 All Booking IDs:\", bookingIds);\r",
							"\r",
							"    // Pick a random one\r",
							"    const randomIndex = Math.floor(Math.random() * bookingIds.length);\r",
							"    const selectedId = bookingIds[randomIndex];\r",
							"\r",
							"    // Save as global variable\r",
							"    pm.globals.set(\"booking_id\", selectedId);\r",
							"    console.log(`🎯 Random booking selected: ${selectedId}`);\r",
							"\r",
							"    // Set next request\r",
							"    pm.execution.setNextRequest(\"Update booking\");\r",
							"\r",
							"} else {\r",
							"    pm.test(\"❌ Booking list is empty or invalid\", function () {\r",
							"        pm.expect.fail(\"No valid bookings returned in response\");\r",
							"    });\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "JSON Type",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/api/v1/bookings",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"bookings"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.execution.setNextRequest(\"Delete Booking\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"checkInDate\": \"2025-06-10\",\r\n  \"checkOutDate\": \"2025-06-12\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/bookings/:id",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"bookings",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{booking_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.execution.setNextRequest(null);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/bookings/:id",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"bookings",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{booking_id}}"
						}
					]
				}
			},
			"response": []
		}
	]
}